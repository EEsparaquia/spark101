package com.esparaquia.hdp.spark

import org.apache.log4j.Logger;
import org.apache.spark.SparkConf;
import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.api.java.JavaRDD;
import org.apache.spark.api.java.JavaSparkContext;
import scala.Tuple2;

import java.util.Arrays;

public class SparkCount {

    private static void wordCount(String fileName) {
        Logger logger = Logger.getLogger(SparkCount.class);
        SparkConf sparkConf = new SparkConf().setMaster("local").setAppName("JDWordCounter");
        JavaSparkContext sparkContext = new JavaSparkContext(sparkConf);
        JavaRDD<String> inputFile = sparkContext.textFile(fileName);
        JavaRDD<String> wordsFromFile = inputFile.flatMap(content -> Arrays.asList(content.split(" ")).iterator());
        JavaPairRDD countData = wordsFromFile.mapToPair(t -> new Tuple2(t, 1)).reduceByKey((x, y) -> (int) x + (int) y);
        for (Object lines:countData.collect()){
            logger.info("VALUES: "+lines+"\n");
        }

        countData.saveAsTextFile("./CountData");
        sparkContext.close();
    }

    public static void main(String[] args) throws Exception {

        if (args.length == 0) {
            System.out.println("No files provided in the path.");
            System.exit(0);
        }

        wordCount(args[0]);
    }
}
